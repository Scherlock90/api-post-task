{"version":3,"sources":["components/User/user-cards/UsersCards.jsx","ducks/actions/utils.js","utils/utils.js","ducks/actions/user-action/UserActions.js","ducks/actions/types.js","ducks/actions/common-action/index.js","components/User/User.jsx","components/User/user-logic/useUsersArray.js","components/common/utils.js","custom-hooks/use-notification/useNotification.js","components/Comments/navigation-comments/NavigationComments.jsx","components/common/wrapper/Wrapper.jsx","components/common/notification/Notification.jsx","components/Comments/comment-form/CommentForm.jsx","ducks/actions/comments-action/CommentActions.js","components/Comments/post/Post.jsx","components/Comments/toggle-comments/ToggleComments.jsx","components/Comments/comment-cards/CommentsCards.jsx","components/Comments/Comments.jsx","components/Posts/post-form/PostForm.jsx","ducks/actions/post-action/PostActions.js","components/Posts/post-cards/PostsCards.jsx","components/Posts/navigation-posts/NavigationPosts.jsx","components/Posts/Posts.jsx","ducks/reducers/post-reducer/PostReducer.js","ducks/reducers/user-reducer/UserReducer.js","ducks/reducers/comment-reducer/CommentReducer.js","ducks/reducers/notification-reducer/NotificationReducer.js","ducks/reducers/index.js","ducks/store/index.js","index.js","static/routes.js","components/Home.jsx"],"names":["UsersCards","_ref","name","email","phone","website","companyName","companyCatchPhrase","companyBs","dispatchAuthor","id","react_default","a","createElement","className","href","react_router_dom","to","pathname","concat","onClick","key","username","URL","optionsAjax","url","method","body","errorInformation","message","Error","fetchUsers","dispatch","ajax","subscribe","response","type","payload","err","notification","User","user","useDispatch","useSelector","users","fetchData","useEffect","useUsersArray","uk-grid","length","map","company","bs","catchPhrase","lib_default","size","spinnerColor","spinnerWidth","visible","compareData","data","compareParameter","filter","item","useNotification","_useState","useState","_useState2","Object","slicedToArray","notificationClassName","setNotificationClassName","notificationHandler","notificationTxt","includes","NavigationComments","post","nameAuthor","_ref2","uk-icon","Wrapper","children","Notification","CommentForm","closeModal","postId","setName","_useState3","_useState4","setBody","_useState5","_useState6","setEmail","onChange","e","target","value","trArray","placeholder","onSubmit","commentData","preventDefault","_ref2$response","setTimeout","Wrapper_Wrapper","required","Post","title","ToggleComments","isActive","activeComments","toggleModal","CommentsCards","Comments","params","useParams","modalMainOpen","setModalMainOpen","setIsActive","comments","comment","_ref3","posts","_ref4","filteredPost","filteredAuthor","_ref5","userId","Loaders","_ref6","i","Notification_Notification","assign","Fragment","toConsumableArray","letter","_ref7","_ref8","react_modal_lib_default","isOpen","contentLabel","onRequestClose","overlayClassName","ariaHideApp","comment_form_CommentForm","PostForm","setTitle","postData","PostsCards","handleDeletedPost","pathnameId","react_text_truncate_lib_default","truncateText","line","text","NavigationPosts","Posts","fetchUser","deletePost","post_form_PostForm","initialState","combineReducers","state","arguments","undefined","action","objectSpread2","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","basename","process","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.4b1bda99.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function UsersCards({\n  name,\n  email,\n  phone,\n  website,\n  companyName,\n  companyCatchPhrase,\n  companyBs,\n  dispatchAuthor,\n  id,\n}) {\n  return (\n    <div className='uk-card uk-card-default uk-card-body'>\n      <div className='uk-card-header'>\n        <div className='uk-grid-small uk-flex-middle'>\n          <div className='uk-width-auto'>\n            <div className='uk-width-expand'>\n              <h3 className='uk-card-title uk-margin-remove-bottom main-title'>{name}</h3>\n            </div>\n          </div>\n        </div>\n        <div className='uk-card-body'>\n          <div className='cards-main-left'>\n            <div>\n              <a href='#'> {email} </a>\n            </div>\n            <div>\n              <a href='#'>{phone}</a>\n            </div>\n            <div>\n              <a href='#'>{website}</a>\n            </div>\n          </div>\n          <div className='cards-main-left'>\n            <div> {companyName} </div>\n            <div> {companyCatchPhrase} </div>\n            <div> {companyBs} </div>\n          </div>\n        </div>\n        <div className='uk-card-footer'>\n          <Link\n            to={{ pathname: `/${id}/posts` }}\n            onClick={dispatchAuthor}\n            key={id}\n            username={name}\n            className='uk-button uk-button-primary'\n          >\n            Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const URL = 'https://jsonplaceholder.typicode.com';\n\nexport const options = (method, url, data) => {\n  return {\n    method,\n    url,\n    data,\n  };\n};\n\nexport const optionsAjax = (url, method, body) => (\n  {\n    url,\n    method,\n    body\n  }\n)\n","export const errorInformation = message => {\n  throw new Error(message);\n};\n","import { ajax } from 'rxjs/ajax';\n\nimport { FETCH_SINGLE_USERS, FETCH_USERS, } from '../types';\nimport { URL } from '../utils';\nimport { errorInformation } from '../../../utils/utils';\n\nexport const fetchUsers = () => dispatch => {\n  ajax(`${URL}/users`).subscribe(\n    ({ response }) => {\n      dispatch({\n        type: FETCH_USERS,\n        payload: response,\n      });\n    },\n    err => errorInformation(err),\n  );\n};\n\nexport const fetchSingleUser = userId => dispatch => {\n  ajax(`${URL}/users/${userId}`).subscribe(\n    ({ response }) => {\n      dispatch({\n        type: FETCH_SINGLE_USERS,\n        payload: response,\n      });\n    },\n    err => errorInformation(err),\n  );\n};\n","export const FETCH_COMMENTS = 'FETCH_COMMENTS';\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const NEW_COMMENT = 'NEW_COMMENT';\nexport const DELETE_POST = 'DELETE_POST';\nexport const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_SINGLE_USERS = 'FETCH_SINGLE_USERS';\n\nexport const DELETE = 'DELETE';\nexport const PENDING = 'PENDING';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\nexport const INITIAL = 'INITIAL';\n","export const notification = (dispatch, type) => {\n  dispatch({\n    type: type,\n  });\n};\n","import React from 'react';\nimport Spinner from 'react-spinner-material';\nimport UsersCards from './user-cards/UsersCards';\nimport useUsersArray from './user-logic/useUsersArray';\n\nexport default function User() {\n  const { user } = useUsersArray();\n\n  return (\n    <div className='container-user'>\n      <div\n        className='uk-grid-large uk-child-width-expand@s uk-text-center main-grid2'\n        uk-grid='false'\n      >\n        {user.users.length ? (\n          user.users.map(({ id, name, email, phone, website, company }) => (\n            <UsersCards\n              key={id}\n              id={id}\n              name={name}\n              email={email}\n              phone={phone}\n              website={website}\n              companyName={company.name}\n              companyBs={company.bs}\n              companyCatchPhrase={company.catchPhrase}\n            />\n          ))\n        ) : (\n          <Spinner size={120} spinnerColor='#333' spinnerWidth={2} visible={true} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers } from '../../../ducks/actions/index';\nimport { errorInformation } from '../../../utils/utils';\n\nexport default function useUsersArray () {\n  const dispatch = useDispatch();\n\n  const user = useSelector(({ users }) => users);\n\n  const fetchData = () => dispatch(fetchUsers());\n\n  useEffect(() => {\n    try {\n      fetchData();\n    } catch (err) {\n      errorInformation(err);\n    }\n\n    return () => fetchData();\n  }, []);\n\n  return { user };\n}\n","export const compareData = (data, key, compareParameter) =>\n  data.filter(item => item[key] === compareParameter);\n","import { useEffect, useState } from 'react';\n\nexport const useNotification = notification => {\n  const [notificationClassName, setNotificationClassName] = useState('');\n\n  const notificationHandler = notificationTxt => {\n    if (notificationTxt.includes('Adding') || notificationTxt.includes('Removing'))\n      return setNotificationClassName('info');\n    else if (notificationTxt.includes('Success'))\n      return setNotificationClassName('success');\n    else if (notificationTxt.includes('Error')) return setNotificationClassName('error');\n    else setNotificationClassName('normal');\n  };\n\n  useEffect(() => {\n    notificationHandler(notification);\n\n    return () => notificationHandler(notification);\n  }, [notification]);\n\n  return { notificationClassName };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavigationComments({ post, nameAuthor }) {\n  return (\n    <div className='header-posts'>\n      <div className='uk-child-width-1-3@m uk-grid-small uk-grid-match' uk-grid='false'>\n        <div className='uk-card uk-card-body main-cards-posts-left'>\n          <h3 className='uk-card-title'>\n            {post.map(({ id }) => (\n              <Link className='arrow-back' key={id} to={{ pathname: `/${id}/posts` }}>\n                <span uk-icon='icon: reply; ratio: 2'></span>\n                Back\n              </Link>\n            ))}\n          </h3>\n        </div>\n        <div>\n          <div className='uk-card uk-card-body main-cards-posts-center'>\n            <h3 className='uk-card-title main-author-post'>{nameAuthor}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const Wrapper = ({ name, children }) => (\n  <tr>\n    <td className='body-container-form'>{name}</td>\n    <td className='body-container-form2'>{children}</td>\n  </tr>\n);\n","import React from 'react';\n\nexport const Notification = ({ notification, notificationClassName }) => (\n  <div className={`notification-container__${notificationClassName}`}>\n    <p className='notification'>{notification}</p>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { createComment } from '../../../ducks/actions/index';\nimport { Wrapper } from '../../common/index';\n\nconst CommentForm = ({ closeModal, postId }) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n\n  const [body, setBody] = useState('');\n\n  const [email, setEmail] = useState('');\n\n  const onChange = e => {\n    const { name } = e.target;\n\n    if (name === 'name') return setName(e.target.value);\n    else if (name === 'email') return setEmail(e.target.value);\n    else if (name === 'body') return setBody(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const comment = {\n      name,\n      body,\n      email,\n      postId,\n    };\n    dispatch(createComment(comment));\n    closeModal();\n  };\n\n  const trArray = [\n    {\n      name: 'name',\n      type: 'text',\n      value: name,\n      placeholder: 'Name',\n    },\n    {\n      name: 'email',\n      type: 'email',\n      value: email,\n      placeholder: 'E-mail',\n    },\n  ];\n\n  return (\n    <div className='container-modal'>\n      <div className='container-my-modal'>\n        <div className='container-post-form-main'>\n          <div className='title-post-form'>Add comment</div>\n          <div className='container-post-form2'>\n            <h1 className='title-modal-post'>Add Comment</h1>\n            <form onSubmit={onSubmit}>\n              <table className='uk-table uk-table-justify uk-table-divider'>\n                <tbody>\n                  {trArray.map(({ name, type, value, placeholder }) => (\n                    <Wrapper\n                      key={name}\n                      name={name}\n                      children={\n                        <input\n                          className='text-place-post-form'\n                          name={name}\n                          type={type}\n                          value={value}\n                          placeholder={placeholder}\n                          onChange={onChange}\n                          required\n                        />\n                      }\n                    />\n                  ))}\n                  <Wrapper\n                    name='Body'\n                    children={\n                      <textarea\n                        className='text-place-post-form text-area-main'\n                        value={body}\n                        name='body'\n                        placeholder='Body'\n                        onChange={onChange}\n                        required\n                      />\n                    }\n                  />\n                </tbody>\n              </table>\n              <div className='container-button-post'>\n                <button\n                  onClick={closeModal}\n                  className='uk-button uk-button-danger main-button-style'\n                >\n                  Cancel\n                </button>\n                <button\n                  className='uk-button uk-button-primary main-button-style'\n                  type='submit'\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n          <div className='title-post-form-down'></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/* eslint-disable no-console */\nimport { ajax } from 'rxjs/ajax';\nimport { ERROR, FETCH_COMMENTS, INITIAL, NEW_COMMENT, PENDING, SUCCESS } from '../types';\nimport { URL, optionsAjax } from '../utils';\nimport { errorInformation } from '../../../utils/utils';\nimport { notification } from '../common-action/index';\n\nexport const fetchComments = () => dispatch => {\n  ajax(`${URL}/comments`).subscribe(\n    ({ response }) => {\n      dispatch({\n        type: FETCH_COMMENTS,\n        payload: response,\n      });\n    },\n    err => errorInformation(err),\n  );\n};\n\nexport const createComment = commentData => dispatch => {\n  notification(dispatch, PENDING);\n\n  ajax(optionsAjax(`${URL}/comments`, 'POST', commentData)).subscribe(\n    ({ response: { body, email, id, name, postId } }) => {\n      dispatch({\n        type: NEW_COMMENT,\n        payload: {\n          body,\n          email,\n          name,\n          id: +id,\n          postId: +postId,\n        },\n      });\n\n      notification(dispatch, SUCCESS);\n      setTimeout(() => notification(dispatch, INITIAL), 2000);\n    },\n    err => {\n      notification(dispatch, ERROR);\n      setTimeout(() => notification(dispatch, INITIAL), 5000);\n      errorInformation(err);\n    },\n  );\n};\n","import React from 'react';\n\nexport default function Post({ title, body }) {\n  return (\n    <div className='container-to-comments'>\n      <div className='container-post-cards one-post-container'>\n        <div className='uk-text-center' uk-grid='false'>\n          <div className='uk-width-expand@m card-center-title'>\n            <div className='uk-card uk-card-default uk-card-body'>\n              <div className='title-one-post'>{title}</div>\n              <div className='body-one-post'>{body}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ToggleComments({ isActive, activeComments, toggleModal }) {\n  return (\n    <div className='container-for-buttons-commments'>\n      <div className='uk-card uk-card-body main-cards-posts-left'>\n        <h3 className='uk-card-title cont-button'>\n          <span\n            className='icon-add-comments'\n            uk-icon={\n              isActive ? 'icon:  arrow-up; ratio: 2' : 'icon:  arrow-down; ratio: 2'\n            }\n            onClick={activeComments}\n          ></span>\n          <div className='title-button-add-comment'>\n            {isActive ? 'Hide comments' : 'Show Commments'}\n          </div>\n        </h3>\n      </div>\n      <div>\n        <div className='uk-card uk-card-body main-cards-posts-right'>\n          <h3 className='uk-card-title cont-button'>\n            <span\n              className='icon-add-comments'\n              uk-icon='icon:  plus-circle; ratio: 2'\n              onClick={toggleModal}\n            ></span>\n            <div className='title-button-add-comment'>Add Comment</div>\n          </h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function CommentsCards({ name, email, body }) {\n  return (\n    <div className='container-post-cards'>\n      <div className='uk-text-center' uk-grid='false'>\n        <div className='uk-width-expand@m card-center-title'>\n          <div className='uk-card uk-card-default uk-card-body'>\n            <h3 className='uk-card-title comments-header'>\n              <div id='d1'>{name}</div>\n              <div id='d2' className='span-email'>\n                <a href='email'>{email}</a>\n              </div>\n            </h3>\n            <div>{body}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactModal from 'react-modal';\nimport Spinner from 'react-spinner-material';\n\nimport { fetchComments } from '../../ducks/actions/index';\nimport { compareData } from '../common/utils';\nimport { errorInformation } from '../../utils/utils';\nimport { useNotification } from '../../custom-hooks/index';\n\nimport NavigationComments from './navigation-comments/NavigationComments';\nimport { Notification } from '../common/index';\nimport CommentForm from './comment-form/CommentForm';\nimport Post from './post/Post';\nimport ToggleComments from './toggle-comments/ToggleComments';\nimport CommentsCards from './comment-cards/CommentsCards';\n\nconst Comments = () => {\n  const dispatch = useDispatch();\n\n  const params = useParams();\n\n  const [modalMainOpen, setModalMainOpen] = useState(false);\n\n  const [isActive, setIsActive] = useState(false);\n\n  const comments = useSelector(({ comment: { comment } }) => comment);\n\n  const users = useSelector(({ users: { users } }) => users);\n\n  const post = useSelector(({ posts: { posts } }) => posts);\n\n  const notification = useSelector(({ notification: { notification } }) => notification);\n\n  const { notificationClassName } = useNotification(notification);\n\n  const fetchData = () => dispatch(fetchComments());\n\n  const activeComments = () => setIsActive(!isActive);\n\n  const toggleModal = () => setModalMainOpen(!modalMainOpen);\n\n  useEffect(() => {\n    try {\n      fetchData();\n    } catch (err) {\n      errorInformation(err);\n    }\n\n    return () => fetchData();\n  }, []);\n\n  const filteredPost = compareData(post, 'id', +params.postId);\n\n  const filteredAuthor = compareData(\n    users,\n    'id',\n    filteredPost.map(({ userId }) => userId)[0],\n  );\n\n  const Loaders = (\n    <Spinner size={120} spinnerColor='#333' spinnerWidth={2} visible={true} />\n  );\n\n  return (\n    <div className='container-posts-main'>\n      {filteredAuthor.length ? (\n        <NavigationComments post={filteredAuthor} nameAuthor={filteredAuthor[0].name} />\n      ) : null}\n      {filteredPost.length\n        ? filteredPost.map(({ title, body }, i) => (\n            <Post key={i} title={title} body={body} />\n          ))\n        : Loaders}\n      {notification && (\n        <Notification\n          {...{ notificationClassName }}\n          notification={\n            <>\n              {[...notification].map((letter, id) => (\n                <span key={id}>{letter}</span>\n              ))}\n            </>\n          }\n        />\n      )}\n      <ToggleComments\n        isActive={isActive}\n        activeComments={() => activeComments()}\n        toggleModal={() => toggleModal()}\n      />\n      <div\n        className={\n          isActive ? 'container-comments-show--active' : 'container-comments-show'\n        }\n      >\n        {comments.length > 1\n          ? comments\n              .filter(({ postId }) => postId === +params.postId)\n              .map(({ name, body, email }, i) => (\n                <CommentsCards key={i} name={name} body={body} email={email} />\n              ))\n          : Loaders}\n      </div>\n      <ReactModal\n        isOpen={modalMainOpen}\n        contentLabel='onRequestClose Example'\n        onRequestClose={toggleModal}\n        className='Modal'\n        overlayClassName='Overlay mainOverlay'\n        ariaHideApp={false}\n      >\n        <CommentForm postId={+params.postId} closeModal={() => toggleModal()} />\n      </ReactModal>\n    </div>\n  );\n};\n\nexport default Comments;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Wrapper } from '../../common/index';\nimport { createPost } from '../../../ducks/actions/index';\n\nconst PostForm = ({ closeModal, userId }) => {\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState('');\n\n  const [body, setBody] = useState('');\n\n  const onChange = e => {\n    const { name } = e.target;\n\n    if (name === 'title') return setTitle(e.target.value);\n    else if (name === 'body') return setBody(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const post = {\n      title,\n      body,\n      userId: +userId,\n    };\n    dispatch(createPost(post));\n    closeModal();\n  };\n\n  return (\n    <div className='container-modal'>\n      <div className='container-my-modal'>\n        <div className='container-post-form-main'>\n          <div className='title-post-form'>Add comment</div>\n          <div className='container-post-form2'>\n            <h1 className='title-modal-post'>Add Comment</h1>\n            <form onSubmit={onSubmit}>\n              <table className='uk-table uk-table-justify uk-table-divider'>\n                <tbody>\n                  <Wrapper\n                    name='Title'\n                    children={\n                      <input\n                        className='text-place-post-form'\n                        name='title'\n                        type='text'\n                        placeholder='Title'\n                        value={title}\n                        onChange={onChange}\n                        required\n                      />\n                    }\n                  />\n                  <Wrapper\n                    name='Body'\n                    children={\n                      <textarea\n                        className='text-place-post-form text-area-main'\n                        name='body'\n                        placeholder='Body'\n                        value={body}\n                        onChange={onChange}\n                        required\n                      />\n                    }\n                  />\n                </tbody>\n              </table>\n              <div className='container-button-post'>\n                <button\n                  onClick={closeModal}\n                  className='uk-button uk-button-danger main-button-style'\n                >\n                  Cancel\n                </button>\n                <button\n                  className='uk-button uk-button-primary main-button-style'\n                  type='submit'\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n          <div className='title-post-form-down'></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostForm;\n","/* eslint-disable no-console */\nimport { ajax } from 'rxjs/ajax';\n\nimport { URL, optionsAjax } from '../utils';\nimport { errorInformation } from '../../../utils/utils';\nimport {\n  DELETE,\n  DELETE_POST,\n  ERROR,\n  FETCH_POSTS,\n  INITIAL,\n  NEW_POST,\n  PENDING,\n  SUCCESS,\n} from '../types';\nimport { notification } from '../common-action/index';\n\nexport const fetchPosts = userId => dispatch => {\n  ajax(`${URL}/users/${userId}/posts`).subscribe(\n    ({ response }) => {\n      dispatch({\n        type: FETCH_POSTS,\n        payload: response,\n      });\n    },\n    err => errorInformation(err),\n  );\n};\n\nexport const createPost = postData => dispatch => {\n  notification(dispatch, PENDING);\n\n  ajax(optionsAjax(`${URL}/posts`, 'POST', postData)).subscribe(\n    ({ response: { userId, body, id, title } }) => {\n      dispatch({\n        type: NEW_POST,\n        payload: {\n          title,\n          body,\n          userId: +userId,\n          id: +id,\n        },\n      });\n\n      notification(dispatch, SUCCESS);\n      setTimeout(() => notification(dispatch, INITIAL), 2000);\n    },\n    err => {\n      notification(dispatch, ERROR);\n      setTimeout(() => notification(dispatch, INITIAL), 5000);\n      errorInformation(err);\n    },\n  );\n};\n\nexport const deletePost = id => dispatch => {\n  notification(dispatch, DELETE);\n\n  ajax(optionsAjax(`${URL}/posts/${id}`, 'DELETE')).subscribe(\n    response => {\n      dispatch({\n        type: DELETE_POST,\n        payload: id || response,\n      });\n\n      notification(dispatch, SUCCESS);\n      setTimeout(() => notification(dispatch, INITIAL), 2000);\n    },\n    err => {\n      notification(dispatch, ERROR);\n      setTimeout(() => notification(dispatch, INITIAL), 5000);\n      errorInformation(err);\n    },\n  );\n};\n","import React from 'react';\nimport TextTruncate from 'react-text-truncate';\nimport { Link } from 'react-router-dom';\n\nexport default function PostsCards({ title, handleDeletedPost, pathnameId, name }) {\n  return (\n    <div className='container-post-cards'>\n      <div className='uk-text-center' uk-grid='false'>\n        <div id='c1' className='uk-width-auto@m'>\n          <div className='uk-card uk-card-default uk-card-body'>\n            <span\n              className='icon-go-to-trash'\n              uk-icon='icon: trash; ratio: 2'\n              onClick={handleDeletedPost}\n            ></span>\n          </div>\n        </div>\n        <div id='c2' className='uk-width-expand@m card-center-title'>\n          <div className='uk-card uk-card-default uk-card-body'>\n            <TextTruncate truncateText='…' line={1} text={title} />\n          </div>\n        </div>\n        <div id='c3' className='uk-width-1-3@m'>\n          <div className='uk-card uk-card-default uk-card-body button-go-to-post'>\n            <Link\n              to={{ pathname: `/${pathnameId}/post-comments` }}\n              username={name}\n              className='uk-button'\n            >\n              <span uk-icon='icon: chevron-right; ratio: 2'></span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavigationPosts({ nameAuthor, toggleModal }) {\n  return (\n    <div className='header-posts'>\n      <div className='uk-child-width-1-3@m uk-grid-small uk-grid-match' uk-grid='false'>\n        <div id='h1'>\n          <div className='uk-card uk-card-body main-cards-posts-left'>\n            <h3 className='uk-card-title'>\n              <Link className='arrow-back' to='/'>\n                <span uk-icon='icon: reply; ratio: 2'></span>\n                Back\n              </Link>\n            </h3>\n          </div>\n        </div>\n        <div id='h2'>\n          <div className='uk-card uk-card-body main-cards-posts-center'>\n            <h3 className='uk-card-title main-author-post'>{nameAuthor}</h3>\n          </div>\n        </div>\n        <div id='h3'>\n          <div className='uk-card uk-card-body main-cards-posts-right'>\n            <h3 className='uk-card-title'>\n              <span\n                className='icon-add-post'\n                uk-icon='icon: plus-circle; ratio: 2'\n                onClick={toggleModal}\n              ></span>\n            </h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactModal from 'react-modal';\nimport Spinner from 'react-spinner-material';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nimport PostForm from './post-form/PostForm';\nimport PostsCards from './post-cards/PostsCards';\nimport NavigationPosts from './navigation-posts/NavigationPosts';\nimport { Notification } from '../common/index';\n\nimport { deletePost, fetchPosts, fetchSingleUser } from '../../ducks/actions/index';\nimport { errorInformation } from '../../utils/utils';\nimport { useNotification } from '../../custom-hooks/index';\n\nconst Posts = () => {\n  const dispatch = useDispatch();\n\n  const params = useParams();\n\n  const [modalMainOpen, setModalMainOpen] = useState(false);\n\n  const post = useSelector(({ posts: { posts } }) => posts);\n\n  const users = useSelector(({ users: { user } }) => user);\n\n  const notification = useSelector(({ notification: { notification } }) => notification);\n\n  const { notificationClassName } = useNotification(notification);\n\n  const fetchData = () => dispatch(fetchPosts(+params.userId));\n\n  const fetchUser = () => dispatch(fetchSingleUser(+params.userId));\n\n  const toggleModal = () => setModalMainOpen(!modalMainOpen);\n\n  const handleDeletedPost = id => dispatch(deletePost(+id));\n\n  const Loaders = (\n    <Spinner size={120} spinnerColor='#333' spinnerWidth={2} visible={true} />\n  );\n\n  useEffect(() => {\n    try {\n      fetchData();\n      fetchUser();\n    } catch (err) {\n      errorInformation(err);\n    }\n\n    return () => fetchData();\n  }, []);\n\n  return (\n    <div className='container-posts-main'>\n      <NavigationPosts nameAuthor={users.name} toggleModal={toggleModal} />\n      {notification && (\n        <Notification\n          {...{ notificationClassName }}\n          notification={\n            <>\n              {[...notification].map((letter, id) => (\n                <span key={id}>{letter}</span>\n              ))}\n            </>\n          }\n        />\n      )}\n      {post.length\n        ? post.map(({ id, title, name }, i) => (\n            <PostsCards\n              key={i}\n              handleDeletedPost={() => handleDeletedPost(id)}\n              title={title}\n              pathnameId={id}\n              name={name}\n            />\n          ))\n        : Loaders}\n      <ReactModal\n        isOpen={modalMainOpen}\n        contentLabel='onRequestClose Example'\n        onRequestClose={toggleModal}\n        className='Modal'\n        overlayClassName='Overlay mainOverlay'\n        ariaHideApp={false}\n      >\n        <PostForm userId={+params.userId} closeModal={toggleModal} />\n      </ReactModal>\n    </div>\n  );\n};\n\nexport default Posts;\n","import { DELETE_POST, FETCH_POSTS, NEW_POST } from '../../actions/types';\n\nconst initialState = {\n  posts: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case NEW_POST:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: [...state.posts.filter(item => item.id !== action.payload)],\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_SINGLE_USERS, FETCH_USERS, } from '../../actions/types';\n\nconst initialState = {\n  users: [],\n  user: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case FETCH_SINGLE_USERS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_COMMENTS, NEW_COMMENT } from '../../actions/types';\n\nconst initialState = {\n  comment: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return {\n        ...state,\n        comment: action.payload,\n      };\n    case NEW_COMMENT:\n      return {\n        ...state,\n        comment: [...state.comment, action.payload],\n      };\n    default:\n      return state;\n  }\n}\n","import { ERROR, DELETE, INITIAL, PENDING, SUCCESS } from '../../actions/types';\n\nconst initialState = {\n  notification: '',\n};\n\nexport default function (state = initialState, { type }) {\n  switch (type) {\n    case INITIAL:\n      return {\n        ...state,\n        notification: '',\n      };\n    case PENDING:\n      return {\n        ...state,\n        notification: 'Adding...',\n      };\n    case DELETE:\n      return {\n        ...state,\n        notification: 'Removing...',\n      };\n    case SUCCESS:\n      return {\n        ...state,\n        notification: 'Success',\n      };\n    case ERROR:\n      return {\n        ...state,\n        notification: 'Error! Try again',\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './post-reducer/PostReducer';\nimport userReducer from './user-reducer/UserReducer';\nimport commentReducer from './comment-reducer/CommentReducer';\nimport notificationReducer from './notification-reducer/NotificationReducer';\n\nexport default combineReducers({\n  posts: postReducer,\n  users: userReducer,\n  comment: commentReducer,\n  notification: notificationReducer,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { commentsRoutes, mainRoutes, postsRoutes } from './static/routes';\n\nimport Home from './components/Home';\nimport Comments from './components/Comments/Comments';\nimport Posts from './components/Posts/Posts';\nimport store from './ducks/store';\n\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path={mainRoutes} component={Home} />\n        <Route path={postsRoutes} component={Posts} />\n        <Route path={commentsRoutes} component={Comments} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","export const mainRoutes = '/';\nexport const postsRoutes = '/:userId/posts';\nexport const commentsRoutes = '/:postId/post-comments';\n","import React from 'react';\nimport User from './User/User';\n\nexport default function Home() {\n  return (\n    <div className='main-container'>\n      <div className='home-container'>\n        API <br /> Users-Post-Comments\n      </div>\n      <User />\n    </div>\n  );\n}\n"],"sourceRoot":""}
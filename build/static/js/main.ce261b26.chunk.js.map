{"version":3,"sources":["serviceWorker.js","components/User/user-cards/UsersCards.jsx","duck/actions/types.js","duck/actions/utils.js","components/User/user-logic/useUsersArray.js","duck/actions/user-action/UserActions.js","components/User/User.jsx","components/common/utils.js","components/Comments/navigation-comments/NavigationComments.jsx","components/common/wrapper/Wrapper.jsx","components/Comments/comment-form/CommentForm.jsx","duck/actions/comments-action/CommentActions.js","components/Comments/post/Post.jsx","components/Comments/toggle-comments/ToggleComments.jsx","components/Comments/comment-cards/CommentsCards.jsx","components/Comments/Comments.jsx","components/Posts/post-form/PostForm.jsx","duck/actions/post-action/PostActions.js","components/Posts/post-cards/PostsCards.jsx","components/Posts/navigation-posts/NavigationPosts.jsx","components/Posts/Posts.jsx","duck/reducers/post-reducer/PostReducer.js","duck/reducers/user-reducer/UserReducer.js","duck/reducers/comment-reducer/CommentReducer.js","duck/reducers/index.js","duck/store/index.js","index.js","static/routes.js","components/Home.jsx"],"names":["Boolean","window","location","hostname","match","UsersCards","_ref","name","email","phone","website","companyName","companyCatchPhrase","companyBs","id","react_default","a","createElement","className","href","react_router_dom","to","pathname","concat","usersArray","username","key","FETCH_USERS","URL","options","method","url","data","useUsersArray","dispatch","useDispatch","user","useSelector","state","users","fetchData","_action","Object","asyncToGenerator","regenerator_default","mark","_callee","request","wrap","_context","prev","next","axios","sent","type","payload","stop","_x","apply","this","arguments","useEffect","User","uk-grid","length","map","company","bs","catchPhrase","lib_default","size","spinnerColor","spinnerWidth","visible","compareData","compareParameter","filter","item","NavigationComments","post","nameAuthor","_ref2","uk-icon","Wrapper","children","CommentForm","closeModal","postId","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","body","setBody","_useState5","_useState6","setEmail","onChange","e","target","value","trArray","placeholder","onSubmit","commentData","preventDefault","_callee2","response","_context2","catch","err","console","log","_x2","Wrapper_Wrapper","required","onClick","Post","title","ToggleComments","isActive","activeComments","toggleModal","CommentsCards","Comments","params","useParams","modalMainOpen","setModalMainOpen","setIsActive","comments","comment","posts","filteredPost","filteredAuthor","it","userId","Loaders","i","react_modal_lib_default","isOpen","contentLabel","onRequestClose","overlayClassName","comment_form_CommentForm","PostForm","setTitle","postData","PostsCards","handleDeletedPost","pathnameId","react_text_truncate_lib_default","truncateText","line","text","NavigationPosts","Posts","_ref3","_callee3","_context3","status","_x3","deletePost","author","postsUsers","post_form_PostForm","initialState","combineReducers","undefined","action","objectSpread2","toConsumableArray","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","basename","process","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce261b26.chunk.js","sourcesContent":["const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function UsersCards ({ name, email, phone, website, companyName, companyCatchPhrase, companyBs, id}) {\r\n    return (\r\n        <div className=\"uk-card uk-card-default uk-card-body\">\r\n            <div className=\"uk-card-header\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" >\r\n                    <div className=\"uk-width-auto\">\r\n                        <div className=\"uk-width-expand\">\r\n                            <h3 className=\"uk-card-title uk-margin-remove-bottom main-title\">\r\n                                { name }\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-card-body\">\r\n                    <div className=\"cards-main-left\">\r\n                        <div> <a href=\"#\"> { email } </a> </div>\r\n                        <div> <a href=\"#\">{ phone }</a> </div>\r\n                        <div> <a href=\"#\">{ website }</a> </div>\r\n                    </div>\r\n                    <div className=\"cards-main-left\">\r\n                        <div> { companyName } </div>\r\n                        <div> { companyCatchPhrase } </div>\r\n                        <div> { companyBs } </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uk-card-footer\">\r\n                    <Link\r\n                        to={{\r\n                            pathname: `/${ id }/posts`,\r\n                            usersArray: { username: name }\r\n                        }}\r\n                        key={ id }\r\n                        username={ name }\r\n                        className=\"uk-button uk-button-primary\"\r\n                    >\r\n                        Details\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const FETCH_COMMENTS = 'FETCH_COMMENTS';\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const NEW_POST = 'NEW_POST';\r\nexport const NEW_COMMENT = 'NEW_COMMENT';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const FETCH_USERS = 'FETCH_USERS';","export const URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport const options = (method, url, data) => ({\r\n    method,\r\n    url,\r\n    data,\r\n})\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchUsers } from '../../../duck/actions/index';\r\n\r\nexport default function useUsersArray() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.users);\r\n\r\n    const fetchData = () => dispatch(fetchUsers());\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        return () => fetchData();\r\n    }, [])\r\n\r\n    return { user }\r\n}","import axios from 'axios';\r\nimport { FETCH_USERS } from '../types';\r\nimport { URL, options } from '../utils';\r\n\r\nexport function fetchUsers () {\r\n\treturn async function action (dispatch) {\r\n\t\tconst request = await axios(options('GET', `${URL}/users`));\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: FETCH_USERS,\r\n\t\t\tpayload: request.data\r\n\t\t})\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport Spinner from 'react-spinner-material';\r\nimport UsersCards from './user-cards/UsersCards';\r\nimport useUsersArray  from './user-logic/useUsersArray';\r\n\r\nexport default function User() {\r\n    const { user } = useUsersArray();\r\n\r\n    return (\r\n        <div className=\"container-user\">\r\n            <div className=\"uk-grid-large uk-child-width-expand@s uk-text-center main-grid2\" uk-grid=\"false\">\r\n                {\r\n                    user.users.length\r\n                    ?\r\n                        (user.users.map(user => (\r\n                            <UsersCards\r\n                                key={user.id}\r\n                                id={user.id}\r\n                                name={user.name}\r\n                                email={user.email}\r\n                                phone={user.phone}\r\n                                website={user.website}\r\n                                companyName={user.company.name}\r\n                                companyBs={user.company.bs}\r\n                                companyCatchPhrase={user.company.catchPhrase}\r\n                            />\r\n                        )))\r\n                    :\r\n                        <Spinner\r\n                            size={120}\r\n                            spinnerColor={\"#333\"}\r\n                            spinnerWidth={2}\r\n                            visible={true}\r\n                        />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const compareData = (data, key, compareParameter) => data.filter(item => item[key] === compareParameter);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavigationComments({ post, nameAuthor }) {\r\n    return (\r\n        <div className=\"header-posts\">\r\n            <div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match\" uk-grid=\"false\">\r\n                <div className=\"uk-card uk-card-body main-cards-posts-left\">\r\n                    <h3 className=\"uk-card-title\">\r\n                        {post.map(({ id }) => (\r\n                            <Link className=\"arrow-back\" key={id} to={{ pathname: `/${id}/posts`}}>\r\n                                <span uk-icon=\"icon: reply; ratio: 2\"></span>\r\n                                Back\r\n                            </Link>\r\n                        ))}\r\n                    </h3>\r\n                </div>\r\n                <div>\r\n                    <div className=\"uk-card uk-card-body main-cards-posts-center\">\r\n                        <h3 className=\"uk-card-title main-author-post\">\r\n                            { nameAuthor }\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Wrapper = ({ name, children }) =>\r\n    <tr>\r\n        <td className=\"body-container-form\">{ name }</td>\r\n        <td className=\"body-container-form2\">\r\n            { children }\r\n        </td>\r\n    </tr>\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createComment } from '../../../duck/actions/index';\r\nimport { Wrapper } from '../../common/index';\r\n\r\nconst CommentForm = ({ closeModal, postId }) => {\r\n    const dispatch = useDispatch();\r\n\tconst [name, setName] = useState('');\r\n\tconst [body, setBody] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name } = e.target;\r\n\r\n\t\tif(name === 'name') return setName(e.target.value);\r\n\t\telse if(name === 'email') return setEmail(e.target.value);\r\n\t\telse if(name === 'body') return setBody(e.target.value);\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst comment = {\r\n\t\t\tname,\r\n\t\t\tbody,\r\n\t\t\temail,\r\n\t\t\tpostId,\r\n\t\t};\r\n\t\tdispatch(createComment(comment));\r\n\t\tcloseModal()\r\n\t};\r\n\r\n\tconst trArray = [\r\n\t\t{\r\n\t\t\tname: 'name',\r\n\t\t\ttype: 'text',\r\n\t\t\tvalue: name,\r\n\t\t\tplaceholder: 'Name',\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'email',\r\n\t\t\ttype: 'email',\r\n\t\t\tvalue: email,\r\n\t\t\tplaceholder: 'E-mail',\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"container-modal\">\r\n\t\t\t<div className=\"container-my-modal\" >\r\n\t\t\t\t<div className=\"container-post-form-main\">\r\n\t\t\t\t\t<div className=\"title-post-form\">Add comment</div>\r\n\t\t\t\t\t<div className=\"container-post-form2\">\r\n\t\t\t\t\t\t<h1 className=\"title-modal-post\">Add Comment</h1>\r\n\t\t\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t\t\t<table className=\"uk-table uk-table-justify uk-table-divider\">\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{trArray.map(({name, type, value, placeholder}) => (\r\n\t\t\t\t\t\t\t\t\t\t<Wrapper\r\n\t\t\t\t\t\t\t\t\t\t\tkey={name}\r\n\t\t\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-place-post-form\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t<Wrapper\r\n\t\t\t\t\t\t\t\t\t\tname={'Body'}\r\n\t\t\t\t\t\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-place-post-form text-area-main\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={body}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Body\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<div className=\"container-button-post\">\r\n\t\t\t\t\t\t\t\t<button\tonClick={closeModal} className=\"uk-button uk-button-danger main-button-style\">\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\tclassName=\"uk-button uk-button-primary main-button-style\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"title-post-form-down\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CommentForm;","import axios from 'axios';\r\nimport { FETCH_COMMENTS, NEW_COMMENT } from '../types';\r\nimport { URL, options } from '../utils';\r\n\r\nexport const fetchComments = () => async dispatch => {\r\n\tconst response = await axios(options('GET', `${URL}/comments`))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\tdispatch({\r\n\t\ttype: FETCH_COMMENTS,\r\n\t\tpayload: response.data\r\n\t})\r\n};\r\n\r\nexport const createComment = commentData => async dispatch => {\r\n\tconst response = await axios(options('POST', `${URL}/comments`, commentData))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\tdispatch({\r\n\t\ttype: NEW_COMMENT,\r\n\t\tpayload: response.data\r\n\t})\r\n};\r\n\r\nexport const filteredComment = postId => dispatch => {\r\n\taxios(options('GET', `${URL}/comments?postId=${postId}`))\r\n\t\t.then(response => dispatch({\r\n\t\t\ttype: FETCH_COMMENTS,\r\n\t\t\tpayload: response.data\r\n\t\t}))\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Post({ title, body }) {\r\n    return (\r\n        <div className=\"container-to-comments\">\r\n            <div className=\"container-post-cards one-post-container\" >\r\n                <div className=\"uk-text-center\" uk-grid='false'>\r\n                    <div className=\"uk-width-expand@m card-center-title\">\r\n                        <div className=\"uk-card uk-card-default uk-card-body\">\r\n                            <div className=\"title-one-post\">\r\n                                { title }\r\n                            </div>\r\n                            <div className=\"body-one-post\">\r\n                                { body }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function ToggleComments({ isActive, activeComments, toggleModal }) {\r\n    return (\r\n        <div className=\"container-for-buttons-commments\">\r\n            <div className=\"uk-card uk-card-body main-cards-posts-left\">\r\n                <h3 className=\"uk-card-title cont-button\">\r\n                    <span\r\n                        className=\"icon-add-comments\"\r\n                        uk-icon={isActive ? 'icon:  arrow-up; ratio: 2' : 'icon:  arrow-down; ratio: 2'}\r\n                        onClick={activeComments}\r\n                    ></span>\r\n                    <div className=\"title-button-add-comment\">\r\n                        {isActive ? 'Hide comments' : 'Show Commments'}\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n            <div>\r\n                <div className=\"uk-card uk-card-body main-cards-posts-right\">\r\n                    <h3 className=\"uk-card-title cont-button\">\r\n                        <span\r\n                            className=\"icon-add-comments\"\r\n                            uk-icon=\"icon:  plus-circle; ratio: 2\"\r\n                            onClick={toggleModal}\r\n                        ></span>\r\n                        <div className=\"title-button-add-comment\">Add Comment</div>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function CommentsCards({ name, email, body }) {\r\n    return (\r\n        <div className=\"container-post-cards\">\r\n            <div className=\"uk-text-center\" uk-grid='false'>\r\n                <div className=\"uk-width-expand@m card-center-title\">\r\n                    <div className=\"uk-card uk-card-default uk-card-body\">\r\n                        <h3 className=\"uk-card-title comments-header\">\r\n                            <div id=\"d1\">{ name }</div>\r\n                            <div id=\"d2\" className=\"span-email\">\r\n                                <a href=\"email\" >{ email }</a>\r\n                            </div>\r\n                        </h3>\r\n                        <div>{ body }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactModal from 'react-modal';\r\nimport Spinner from 'react-spinner-material';\r\n\r\nimport { fetchComments } from '../../duck/actions/index';\r\nimport { compareData } from '../common/utils';\r\n\r\nimport NavigationComments from './navigation-comments/NavigationComments';\r\nimport CommentForm from './comment-form/CommentForm';\r\nimport Post from './post/Post';\r\nimport ToggleComments from './toggle-comments/ToggleComments';\r\nimport CommentsCards from './comment-cards/CommentsCards';\r\n\r\nconst Comments = () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    const [modalMainOpen, setModalMainOpen] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const comments = useSelector(state => state.comment.comment);\r\n    const users = useSelector(state => state.users.users);\r\n    const post = useSelector(state => state.posts.posts);\r\n\r\n    const fetchData = () => dispatch(fetchComments());\r\n\r\n    const activeComments = () => setIsActive(!isActive);\r\n\r\n    const toggleModal = () => setModalMainOpen(!modalMainOpen);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        return () => fetchData();\r\n    }, [])\r\n\r\n    const filteredPost = compareData(post, 'id', +params.postId);\r\n    const filteredAuthor = compareData(users, 'id', filteredPost.map(it => it.userId)[0]);\r\n    const Loaders = (\r\n        <Spinner\r\n            size={120}\r\n            spinnerColor={\"#333\"}\r\n            spinnerWidth={2}\r\n            visible={true}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div className=\"container-posts-main\">\r\n            {\r\n                filteredAuthor.length\r\n                ?\r\n                    (\r\n                        <NavigationComments\r\n                            post={filteredAuthor}\r\n                            nameAuthor={filteredAuthor[0].name}\r\n                        />\r\n                    )\r\n                : null\r\n            }\r\n                {\r\n                    filteredPost.length\r\n                        ?\r\n                            (filteredPost.map(({ title, body }, i) => (\r\n                                    <Post\r\n                                        key={i}\r\n                                        title={title}\r\n                                        body={body}\r\n                                    />\r\n                                )\r\n                            ))\r\n                        : Loaders\r\n                }\r\n            <ToggleComments\r\n                isActive={isActive}\r\n                activeComments={() => activeComments()}\r\n                toggleModal={() => toggleModal()}\r\n            />\r\n            <div className={isActive ? 'container-comments-show--active' : 'container-comments-show'}>\r\n                {\r\n                    comments\r\n                        ?\r\n                            (\r\n                                comments\r\n                                .filter(post => post.postId === +params.postId)\r\n                                .map(({ name, body, email }, i) => (\r\n                                        <CommentsCards\r\n                                            key={i}\r\n                                            name={name}\r\n                                            body={body}\r\n                                            email={email}\r\n                                        />\r\n                                    )\r\n                                )\r\n                            )\r\n                        : Loaders\r\n                }\r\n            </div>\r\n            <ReactModal\r\n                isOpen={modalMainOpen}\r\n                contentLabel=\"onRequestClose Example\"\r\n                onRequestClose={toggleModal}\r\n                className=\"Modal\"\r\n                overlayClassName=\"Overlay mainOverlay\"\r\n            >\r\n                <CommentForm\r\n                    postId={+params.postId}\r\n                    closeModal={() => toggleModal()}\r\n                />\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Wrapper } from '../../common/index';\r\nimport { createPost } from '../../../duck/actions/index';\r\n\r\nconst PostForm = ({ closeModal, userId }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [body, setBody] = useState('');\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name } = e.target;\r\n\r\n\t\tif (name === 'title') return setTitle(e.target.value);\r\n\t\telse if (name === 'body') return setBody(e.target.value);\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst post = {\r\n\t\t\ttitle,\r\n\t\t\tbody,\r\n\t\t\tuserId,\r\n\t\t}\r\n\t\tdispatch(createPost(post));\r\n\t\tcloseModal()\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container-modal\">\r\n\t\t\t<div className=\"container-my-modal\" >\r\n\t\t\t\t<div className=\"container-post-form-main\">\r\n\t\t\t\t\t<div className=\"title-post-form\">Add comment</div>\r\n\t\t\t\t\t<div className=\"container-post-form2\">\r\n\t\t\t\t\t\t<h1 className=\"title-modal-post\">Add Comment</h1>\r\n\t\t\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t\t\t<table className=\"uk-table uk-table-justify uk-table-divider\">\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<Wrapper\r\n\t\t\t\t\t\t\t\t\t\tname={'Title'}\r\n\t\t\t\t\t\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-place-post-form\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Wrapper\r\n\t\t\t\t\t\t\t\t\t\tname={'Body'}\r\n\t\t\t\t\t\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-place-post-form text-area-main\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Body\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={body}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<div className=\"container-button-post\">\r\n\t\t\t\t\t\t\t\t<button onClick={closeModal} className=\"uk-button uk-button-danger main-button-style\">\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button className=\"uk-button uk-button-primary main-button-style\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"title-post-form-down\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostForm;","import axios from 'axios';\r\nimport { FETCH_POSTS, NEW_POST } from '../types';\r\nimport { URL, options } from '../utils';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n\tconst response = await axios(options('GET', `${URL}/posts`))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: FETCH_POSTS,\r\n\t\t\tpayload: response.data\r\n\t\t})\r\n};\r\n\r\nexport const createPost = postData => async dispatch => {\r\n\tconst response = await axios(options('POST', `${URL}/posts`, postData))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: NEW_POST,\r\n\t\t\tpayload: response.data\r\n\t\t})\r\n};\r\n\r\nexport const deletePost = id => async dispatch =>  {\r\n\tawait axios(options('DELETE', `${URL}/posts/${id}`))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'SUCCESS',\r\n\t\t\tstatus: 'success', response: 'Success'\r\n\t\t})\r\n}\r\n\r\n\r\nexport const filteredPosts = userId => async dispatch => {\r\n\tconst response = await axios(options('GET', `${URL}/users/${userId}/posts`))\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: FETCH_POSTS,\r\n\t\t\tpayload: response.data\r\n\t\t})\r\n};\r\n\r\n","import React from 'react';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PostsCards ({ title, handleDeletedPost, pathnameId, name}) {\r\n\treturn (\r\n\t\t<div className=\"container-post-cards\">\r\n\t\t\t<div className=\"uk-text-center\" uk-grid='false'>\r\n\t\t\t\t<div id=\"c1\" className=\"uk-width-auto@m\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-default uk-card-body\">\r\n                        <span\r\n                            className=\"icon-go-to-trash\"\r\n                            uk-icon=\"icon: trash; ratio: 2\"\r\n                            onClick={handleDeletedPost}\r\n                        ></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"c2\" className=\"uk-width-expand@m card-center-title\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-default uk-card-body\">\r\n\t\t\t\t\t\t<TextTruncate\r\n\t\t\t\t\t\t\ttruncateText=\"…\"\r\n\t\t\t\t\t\t\tline={1}\r\n\t\t\t\t\t\t\ttext={title}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"c3\" className=\"uk-width-1-3@m\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-default uk-card-body button-go-to-post\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ pathname: `/${pathnameId}/post-comments` }}\r\n                            username={name}\r\n\t\t\t\t\t\t\tclassName=\"uk-button\"\r\n                        >\r\n\t\t\t\t\t\t\t<span uk-icon=\"icon: chevron-right; ratio: 2\"></span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavigationPosts ({ nameAuthor, toggleModal }) {\r\n\treturn (\r\n\t\t<div className=\"header-posts\">\r\n\t\t\t<div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match\" uk-grid=\"false\">\r\n\t\t\t\t<div id=\"h1\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-body main-cards-posts-left\">\r\n\t\t\t\t\t\t<h3 className=\"uk-card-title\">\r\n\t\t\t\t\t\t\t<Link  className=\"arrow-back\" to=\"/\">\r\n\t\t\t\t\t\t\t\t<span uk-icon=\"icon: reply; ratio: 2\"></span>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"h2\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-body main-cards-posts-center\">\r\n\t\t\t\t\t\t<h3 className=\"uk-card-title main-author-post\">\r\n\t\t\t\t\t\t\t{ nameAuthor }\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"h3\">\r\n\t\t\t\t\t<div className=\"uk-card uk-card-body main-cards-posts-right\">\r\n\t\t\t\t\t\t<h3 className=\"uk-card-title\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"icon-add-post\"\r\n\t\t\t\t\t\t\t\tuk-icon=\"icon: plus-circle; ratio: 2\"\r\n\t\t\t\t\t\t\t\tonClick={ toggleModal }\r\n\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactModal from 'react-modal';\r\nimport Spinner from 'react-spinner-material';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport PostForm from './post-form/PostForm';\r\nimport PostsCards from './post-cards/PostsCards';\r\nimport NavigationPosts from './navigation-posts/NavigationPosts';\r\n\r\nimport { deletePost, fetchPosts } from '../../duck/actions/index';\r\nimport { compareData } from '../common/utils';\r\n\r\nconst Posts = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst params = useParams();\r\n\tconst [modalMainOpen, setModalMainOpen] = useState(false);\r\n\r\n\tconst post = useSelector(state => state.posts.posts);\r\n\tconst users = useSelector(state => state.users.users);\r\n\r\n\tconst fetchData = () => dispatch(fetchPosts());\r\n\r\n\tconst toggleModal = () => setModalMainOpen(!modalMainOpen);\r\n\r\n\tconst handleDeletedPost = id => dispatch(deletePost(+id));\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t\treturn () => fetchData();\r\n\t}, [])\r\n\r\n\tconst filteredAuthor = compareData(users, 'id', +params.userId);\r\n\tconst Loaders = (\r\n\t\t<Spinner\r\n\t\t\tsize={120}\r\n\t\t\tspinnerColor={\"#333\"}\r\n\t\t\tspinnerWidth={2}\r\n\t\t\tvisible={true}\r\n\t\t/>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className=\"container-posts-main\">\r\n\t\t<NavigationPosts\r\n\t\t\t\tnameAuthor={filteredAuthor.map(author => author.name)}\r\n\t\t\t\ttoggleModal={toggleModal}\r\n\t\t\t/>\r\n\t\t\t{\r\n\t\t\t\tpost\r\n\t\t\t\t\t?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tpost\r\n\t\t\t\t\t\t\t\t.filter(post => post.userId === +params.userId)\r\n\t\t\t\t\t\t\t\t.map((postsUsers, i) => (\r\n\t\t\t\t\t\t\t\t\t<PostsCards\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\thandleDeletedPost={() => handleDeletedPost(postsUsers.id)}\r\n\t\t\t\t\t\t\t\t\t\ttitle={postsUsers.title}\r\n\t\t\t\t\t\t\t\t\t\tpathnameId={postsUsers.id}\r\n\t\t\t\t\t\t\t\t\t\tname={postsUsers.name}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: Loaders\r\n\t\t\t}\r\n\t\t\t<ReactModal\r\n\t\t\t\tisOpen={modalMainOpen}\r\n\t\t\t\tcontentLabel=\"onRequestClose Example\"\r\n\t\t\t\tonRequestClose={toggleModal}\r\n\t\t\t\tclassName=\"Modal\"\r\n\t\t\t\toverlayClassName=\"Overlay mainOverlay\"\r\n\t\t\t>\r\n\t\t\t\t<PostForm userId={+params.userId} closeModal={toggleModal}/>\r\n\t\t\t</ReactModal>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Posts;","import {\r\n\tFETCH_POSTS,\r\n\tNEW_POST,\r\n\tDELETE_POST,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n\tposts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.payload\r\n\t\t\t};\r\n\t\tcase NEW_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, action.payload]\r\n\t\t\t};\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter(item => item.id !== action.payload)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { FETCH_USERS } from '../../actions/types';\r\n\r\nconst initialState = {\r\n    users: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_COMMENTS, NEW_COMMENT } from '../../actions/types';\r\n\r\nconst initialState = {\r\n    comment: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comment: action.payload\r\n            }\r\n        case NEW_COMMENT:\r\n            return {\r\n                ...state,\r\n                comment: [...state.comment, action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport postReducer from './post-reducer/PostReducer';\r\nimport userReducer from './user-reducer/UserReducer';\r\nimport commentReducer from './comment-reducer/CommentReducer';\r\n\r\nexport default combineReducers({\r\n\tposts: postReducer,\r\n\tusers: userReducer,\r\n\tcomment: commentReducer,\r\n});\r\n","import {\r\n\tcreateStore,\r\n\tapplyMiddleware,\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tapplyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport {\r\n  mainRoutes,\r\n  postsRoutes,\r\n  commentsRoutes\r\n} from './static/routes';\r\n\r\nimport Home from './components/Home';\r\nimport Comments from './components/Comments/Comments';\r\nimport Posts from './components/Posts/Posts';\r\nimport store from './duck/store';\r\n\r\nimport './assets/styles/main.scss';\r\n\r\nReactDOM.render (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path={mainRoutes} component={Home} />\r\n          <Route path={postsRoutes} component={Posts} />\r\n          <Route path={commentsRoutes} component={Comments} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","export const mainRoutes = \"/\";\r\nexport const postsRoutes = \"/:userId/posts\";\r\nexport const commentsRoutes = \"/:postId/post-comments\";","import React from 'react';\r\nimport User from './User/User';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"home-container\">\r\n        API <br/> Users-Post-Comments\r\n      </div>\r\n        <User />\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}